member_class_property.js:10:5
Flags: --lsp
{
  "label":"baz",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"baz"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"baz",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"baz_DEPRECATED",
  "labelDetails":{"detail":": number"},
  "kind":6,
  "detail":"number",
  "documentation":{"kind":"markdown","value":"**@deprecated**"},
  "tags":[1],
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"baz_DEPRECATED"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"baz_DEPRECATED",
        "ac_type":"Acmem"
      }
    ]
  }
}

member_class_static.js:7:5
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"string"},
    {
      "name":"apply",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, args?: A) => R"
    },
    {"name":"arguments","type":"any"},
    {"name":"bind","type":"(thisArg: any, ...argArray: Array<any>) => any"},
    {
      "name":"call",
      "type":"<T, R, A: $ArrayLike<mixed> = $ReadOnly<[]>>(thisArg: T, ...args: A) => R"
    },
    {"name":"caller","type":"any | null"},
    {"name":"length","type":"number"},
    {"name":"name","type":"string"},
    {"name":"toString","type":"() => string"}
  ]
}

member_interface_property.js:10:5
Flags: --lsp
{
  "label":"bar",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"bar"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"bar",
        "ac_type":"Acmem"
      }
    ]
  }
}
{
  "label":"baz",
  "labelDetails":{"detail":": string"},
  "kind":6,
  "detail":"string",
  "documentation":{"kind":"markdown","value":"**@deprecated**"},
  "tags":[1],
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":9,"character":4},"end":{"line":9,"character":4}},
    "newText":"baz"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "member",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"baz",
        "ac_type":"Acmem"
      }
    ]
  }
}

member_middle.js:5:4
Flags: --pretty
{"result":[{"name":"foobar","type":"string"}]}

method_signature.js:22:4
Flags: --lsp
{
  "label":"bar",
  "labelDetails":{"detail":"(s: string) { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"bar(s: string) {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"bar",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}
{
  "label":"foo",
  "labelDetails":{"detail":"(): number { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"foo(): number {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}
{
  "label":"i",
  "labelDetails":{"detail":"(x: number): string { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"i(x: number): string {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":2,
        "session_requests":null,
        "typed_length":null,
        "completion":"i",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}
{
  "label":"qux",
  "labelDetails":{"detail":"(): void { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":21,"character":3},"end":{"line":21,"character":3}},
    "newText":"qux(): void {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":3,
        "session_requests":null,
        "typed_length":null,
        "completion":"qux",
        "ac_type":"Ac_class_key"
      }
    ]
  }
}

method_signature.js:31:4
Flags: --lsp
{
  "label":"foo",
  "labelDetails":{"detail":": () => string"},
  "kind":3,
  "detail":"() => string",
  "sortText":"00000000000000000000",
  "insertTextFormat":1,
  "textEdit":{
    "range":{"start":{"line":30,"character":3},"end":{"line":30,"character":3}},
    "newText":"foo"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "object key",
      {
        "token":null,
        "index":0,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Ackey"
      }
    ]
  }
}
{
  "label":"foo",
  "labelDetails":{"detail":"(): string { … }"},
  "kind":3,
  "sortText":"00000000000000000000",
  "insertTextFormat":2,
  "textEdit":{
    "range":{"start":{"line":30,"character":3},"end":{"line":30,"character":3}},
    "newText":"foo(): string {\n  $0\n}"
  },
  "command":{
    "title":"",
    "command":"log:<PLACEHOLDER_PROJECT_URL>",
    "arguments":[
      "textDocument/completion",
      "class key",
      {
        "token":null,
        "index":1,
        "session_requests":null,
        "typed_length":null,
        "completion":"foo",
        "ac_type":"Ackey"
      }
    ]
  }
}

method_signature.js:40:4
Flags: --lsp

namespace.js:8:12
Flags: --pretty
{"result":[{"name":"a","type":"number"},{"name":"s","type":"typeof S"}]}

namespace.js:12:12
Flags: --pretty
{
  "result":[
    {"name":"AbortSignal","type":"typeof AbortSignal"},
    {"name":"AggregateError","type":"typeof AggregateError"},
    {"name":"Animation","type":"typeof Animation"},
    {"name":"AnimationEffect","type":"typeof AnimationEffect"},
    {"name":"AnimationEvent","type":"typeof AnimationEvent"},
    {"name":"AnimationPlaybackEvent","type":"typeof AnimationPlaybackEvent"},
    {"name":"AnimationTimeline","type":"typeof AnimationTimeline"},
    {"name":"Array","type":"typeof Array"},
    {"name":"ArrayBuffer","type":"typeof ArrayBuffer"},
    {"name":"atob","type":"(encodedString: string) => string"},
    {
      "name":"Atomics",
      "type":"{+[key: $SymbolToStringTag]: \"Atomics\", add(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, and(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, compareExchange(typedArray: $SharedIntegerTypedArray, index: number, expectedValue: number, replacementValue: number): number, exchange(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, isLockFree(size: number): boolean, load(typedArray: $SharedIntegerTypedArray, index: number): number, notify(typedArray: Int32Array, index: number, count: number): number, or(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, store(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, sub(typedArray: $SharedIntegerTypedArray, index: number, value: number): number, wait(typedArray: Int32Array, index: number, value: number, timeout?: number): \"ok\" | \"not-equal\" | \"timed-out\", xor(typedArray: $SharedIntegerTypedArray, index: number, value: number): number}"
    },
    {"name":"Attr","type":"typeof Attr"},
    {"name":"Audio","type":"typeof Audio"},
    {"name":"AudioTrack","type":"typeof AudioTrack"},
    {"name":"AudioTrackList","type":"typeof AudioTrackList"},
    {"name":"BeforeUnloadEvent","type":"typeof BeforeUnloadEvent"},
    {"name":"BigInt","type":"typeof BigInt"},
    {"name":"BigInt64Array","type":"typeof BigInt64Array"},
    {"name":"BigUint64Array","type":"typeof BigUint64Array"},
    {"name":"Blob","type":"typeof Blob"},
    {"name":"Boolean","type":"typeof Boolean"},
    {"name":"BroadcastChannel","type":"typeof BroadcastChannel"},
    {"name":"btoa","type":"(rawString: string) => string"},
    {"name":"CallSite","type":"typeof CallSite"},
    {"name":"CanvasCaptureMediaStream","type":"typeof CanvasCaptureMediaStream"},
    {"name":"CanvasDrawingStyles","type":"typeof CanvasDrawingStyles"},
    {"name":"CanvasGradient","type":"typeof CanvasGradient"},
    {"name":"CanvasPattern","type":"typeof CanvasPattern"},
    {"name":"CanvasRenderingContext2D","type":"typeof CanvasRenderingContext2D"},
    {"name":"CharacterData","type":"typeof CharacterData"},
    {"name":"clearInterval","type":"(intervalId: ?IntervalID) => void"},
    {"name":"clearTimeout","type":"(timeoutId: ?TimeoutID) => void"},
    {"name":"ClipboardEvent","type":"typeof ClipboardEvent"},
    {"name":"ClipboardItem","type":"typeof ClipboardItem"},
    {"name":"Comment","type":"typeof Comment"},
    {"name":"CompositionEvent","type":"typeof CompositionEvent"},
    {
      "name":"console",
      "type":"{_exception(...data: Array<any>): void, assert(condition: mixed, ...data: Array<any>): void, clear(): void, count(label?: string): void, countReset(label?: string): void, debug(...data: Array<any>): void, dir(...data: Array<any>): void, dirxml(...data: Array<any>): void, error(...data: Array<any>): void, group(...data: Array<any>): void, groupCollapsed(...data: Array<any>): void, groupEnd(): void, info(...data: Array<any>): void, log(...data: Array<any>): void, profile(name?: string): void, profileEnd(name?: string): void, table(tabularData: {[key: string]: any} | Array<{[key: string]: any}> | Array<Array<any>>): void, time(label?: string): void, timeEnd(label: string): void, timeLog(label?: string, ...data: Array<any>): void, timeStamp(label?: string): void, trace(...data: Array<any>): void, warn(...data: Array<any>): void, ...}"
    },
    {"name":"CSSKeyframeRule","type":"typeof CSSKeyframeRule"},
    {"name":"CSSKeyframesRule","type":"typeof CSSKeyframesRule"},
    {"name":"CSSRule","type":"typeof CSSRule"},
    {"name":"CSSRuleList","type":"typeof CSSRuleList"},
    {"name":"CSSStyleDeclaration","type":"typeof CSSStyleDeclaration"},
    {"name":"CSSStyleSheet","type":"typeof CSSStyleSheet"},
    {"name":"CustomEvent","type":"typeof CustomEvent"},
    {"name":"DataTransfer","type":"typeof DataTransfer"},
    {"name":"DataTransferItem","type":"typeof DataTransferItem"},
    {"name":"DataTransferItemList","type":"typeof DataTransferItemList"},
    {"name":"DataView","type":"typeof DataView"},
    {"name":"Date","type":"typeof Date"},
    {"name":"decodeURI","type":"(encodedURI: string) => string"},
    {"name":"decodeURIComponent","type":"(encodedURIComponent: string) => string"},
    {"name":"Document","type":"typeof Document"},
    {"name":"document","type":"Document"},
    {"name":"DocumentFragment","type":"typeof DocumentFragment"},
    {"name":"DocumentTimeline","type":"typeof DocumentTimeline"},
    {"name":"DocumentType","type":"typeof DocumentType"},
    {"name":"DOMError","type":"typeof DOMError"},
    {"name":"DOMImplementation","type":"typeof DOMImplementation"},
    {"name":"DOMRect","type":"typeof DOMRect"},
    {"name":"DOMRectList","type":"typeof DOMRectList"},
    {"name":"DOMRectReadOnly","type":"typeof DOMRectReadOnly"},
    {"name":"DOMStringList","type":"typeof DOMStringList"},
    {"name":"DOMTokenList","type":"typeof DOMTokenList"},
    {"name":"DragEvent","type":"typeof DragEvent"},
    {"name":"Element","type":"typeof Element"},
    {"name":"encodeURI","type":"(uri: string) => string"},
    {"name":"encodeURIComponent","type":"(uriComponent: string) => string"},
    {"name":"Error","type":"typeof Error"},
    {"name":"ErrorEvent","type":"typeof ErrorEvent"},
    {"name":"escape","type":"(str: string) => string"},
    {"name":"EvalError","type":"typeof EvalError"},
    {"name":"Event","type":"typeof Event"},
    {"name":"EventSource","type":"typeof EventSource"},
    {"name":"EventTarget","type":"typeof EventTarget"},
    {"name":"exports","type":"{-[key: string]: mixed}"},
    {"name":"File","type":"typeof File"},
    {"name":"FileList","type":"typeof FileList"},
    {"name":"FileReader","type":"typeof FileReader"},
    {"name":"FileSystemDirectoryHandle","type":"typeof FileSystemDirectoryHandle"},
    {"name":"FileSystemFileHandle","type":"typeof FileSystemFileHandle"},
    {"name":"FileSystemHandle","type":"typeof FileSystemHandle"},
    {
      "name":"FileSystemSyncAccessHandle",
      "type":"typeof FileSystemSyncAccessHandle"
    },
    {
      "name":"FileSystemWritableFileStream",
      "type":"typeof FileSystemWritableFileStream"
    },
    {"name":"FinalizationRegistry","type":"typeof FinalizationRegistry"},
    {"name":"Float32Array","type":"typeof Float32Array"},
    {"name":"Float64Array","type":"typeof Float64Array"},
    {"name":"FocusEvent","type":"typeof FocusEvent"},
    {"name":"FormData","type":"typeof FormData"},
    {"name":"Function","type":"typeof Function"},
    {"name":"global","type":"any"},
    {"name":"globalThis","type":"typeof globalThis"},
    {"name":"HitRegionOptions","type":"typeof HitRegionOptions"},
    {"name":"HTMLAnchorElement","type":"typeof HTMLAnchorElement"},
    {"name":"HTMLAppletElement","type":"typeof HTMLAppletElement"},
    {"name":"HTMLAreaElement","type":"typeof HTMLAreaElement"},
    {"name":"HTMLAudioElement","type":"typeof HTMLAudioElement"},
    {"name":"HTMLBaseElement","type":"typeof HTMLBaseElement"},
    {"name":"HTMLBodyElement","type":"typeof HTMLBodyElement"},
    {"name":"HTMLBRElement","type":"typeof HTMLBRElement"},
    {"name":"HTMLButtonElement","type":"typeof HTMLButtonElement"},
    {"name":"HTMLCanvasElement","type":"typeof HTMLCanvasElement"},
    {"name":"HTMLCollection","type":"typeof HTMLCollection"},
    {"name":"HTMLDataElement","type":"typeof HTMLDataElement"},
    {"name":"HTMLDataListElement","type":"typeof HTMLDataListElement"},
    {"name":"HTMLDetailsElement","type":"typeof HTMLDetailsElement"},
    {"name":"HTMLDialogElement","type":"typeof HTMLDialogElement"},
    {"name":"HTMLDivElement","type":"typeof HTMLDivElement"},
    {"name":"HTMLDListElement","type":"typeof HTMLDListElement"},
    {"name":"HTMLElement","type":"typeof HTMLElement"},
    {"name":"HTMLEmbedElement","type":"typeof HTMLEmbedElement"},
    {"name":"HTMLFieldSetElement","type":"typeof HTMLFieldSetElement"},
    {"name":"HTMLFormElement","type":"typeof HTMLFormElement"},
    {"name":"HTMLHeadElement","type":"typeof HTMLHeadElement"},
    {"name":"HTMLHeadingElement","type":"typeof HTMLHeadingElement"},
    {"name":"HTMLHRElement","type":"typeof HTMLHRElement"},
    {"name":"HTMLHtmlElement","type":"typeof HTMLHtmlElement"},
    {"name":"HTMLIFrameElement","type":"typeof HTMLIFrameElement"},
    {"name":"HTMLImageElement","type":"typeof HTMLImageElement"},
    {"name":"HTMLInputElement","type":"typeof HTMLInputElement"},
    {"name":"HTMLLabelElement","type":"typeof HTMLLabelElement"},
    {"name":"HTMLLegendElement","type":"typeof HTMLLegendElement"},
    {"name":"HTMLLIElement","type":"typeof HTMLLIElement"},
    {"name":"HTMLLinkElement","type":"typeof HTMLLinkElement"},
    {"name":"HTMLMapElement","type":"typeof HTMLMapElement"},
    {"name":"HTMLMediaElement","type":"typeof HTMLMediaElement"},
    {"name":"HTMLMenuElement","type":"typeof HTMLMenuElement"},
    {"name":"HTMLMetaElement","type":"typeof HTMLMetaElement"},
    {"name":"HTMLMeterElement","type":"typeof HTMLMeterElement"},
    {"name":"HTMLModElement","type":"typeof HTMLModElement"},
    {"name":"HTMLObjectElement","type":"typeof HTMLObjectElement"},
    {"name":"HTMLOListElement","type":"typeof HTMLOListElement"},
    {"name":"HTMLOptGroupElement","type":"typeof HTMLOptGroupElement"},
    {"name":"HTMLOptionElement","type":"typeof HTMLOptionElement"},
    {"name":"HTMLOptionsCollection","type":"typeof HTMLOptionsCollection"},
    {"name":"HTMLOutputElement","type":"typeof HTMLOutputElement"},
    {"name":"HTMLParagraphElement","type":"typeof HTMLParagraphElement"},
    {"name":"HTMLParamElement","type":"typeof HTMLParamElement"},
    {"name":"HTMLPictureElement","type":"typeof HTMLPictureElement"},
    {"name":"HTMLPreElement","type":"typeof HTMLPreElement"},
    {"name":"HTMLProgressElement","type":"typeof HTMLProgressElement"},
    {"name":"HTMLQuoteElement","type":"typeof HTMLQuoteElement"},
    {"name":"HTMLScriptElement","type":"typeof HTMLScriptElement"},
    {"name":"HTMLSelectElement","type":"typeof HTMLSelectElement"},
    {"name":"HTMLSlotElement","type":"typeof HTMLSlotElement"},
    {"name":"HTMLSourceElement","type":"typeof HTMLSourceElement"},
    {"name":"HTMLSpanElement","type":"typeof HTMLSpanElement"},
    {"name":"HTMLStyleElement","type":"typeof HTMLStyleElement"},
    {"name":"HTMLTableCaptionElement","type":"typeof HTMLTableCaptionElement"},
    {"name":"HTMLTableCellElement","type":"typeof HTMLTableCellElement"},
    {"name":"HTMLTableColElement","type":"typeof HTMLTableColElement"},
    {"name":"HTMLTableElement","type":"typeof HTMLTableElement"},
    {"name":"HTMLTableRowElement","type":"typeof HTMLTableRowElement"},
    {"name":"HTMLTableSectionElement","type":"typeof HTMLTableSectionElement"},
    {"name":"HTMLTemplateElement","type":"typeof HTMLTemplateElement"},
    {"name":"HTMLTextAreaElement","type":"typeof HTMLTextAreaElement"},
    {"name":"HTMLTimeElement","type":"typeof HTMLTimeElement"},
    {"name":"HTMLTitleElement","type":"typeof HTMLTitleElement"},
    {"name":"HTMLTrackElement","type":"typeof HTMLTrackElement"},
    {"name":"HTMLUListElement","type":"typeof HTMLUListElement"},
    {"name":"HTMLUnknownElement","type":"typeof HTMLUnknownElement"},
    {"name":"HTMLVideoElement","type":"typeof HTMLVideoElement"},
    {"name":"Image","type":"typeof Image"},
    {"name":"ImageBitmap","type":"typeof ImageBitmap"},
    {"name":"ImageData","type":"typeof ImageData"},
    {"name":"Infinity","type":"number"},
    {"name":"InputEvent","type":"typeof InputEvent"},
    {"name":"Int16Array","type":"typeof Int16Array"},
    {"name":"Int32Array","type":"typeof Int32Array"},
    {"name":"Int8Array","type":"typeof Int8Array"},
    {"name":"isFinite","type":"(number: mixed) => boolean"},
    {"name":"isNaN","type":"(number: mixed) => boolean"},
    {"name":"Iterator","type":"typeof Iterator"},
    {
      "name":"JSON",
      "type":"{|+parse: (text: string, reviver?: (key: any, value: any) => any) => any, +stringify: ((value: null | string | number | boolean | interface {} | $ReadOnlyArray<mixed>, replacer?: ?((key: string, value: any) => any) | Array<any>, space?: string | number) => string) & ((value: mixed, replacer?: ?((key: string, value: any) => any) | Array<any>, space?: string | number) => string | void)|}"
    },
    {"name":"KeyboardEvent","type":"typeof KeyboardEvent"},
    {"name":"KeyframeEffect","type":"typeof KeyframeEffect"},
    {"name":"Location","type":"typeof Location"},
    {"name":"Map","type":"typeof Map"},
    {
      "name":"Math",
      "type":"{E: number, LN10: number, LN2: number, LOG10E: number, LOG2E: number, PI: number, SQRT1_2: number, SQRT2: number, abs(x: number): number, acos(x: number): number, acosh(x: number): number, asin(x: number): number, asinh(x: number): number, atan(x: number): number, atan2(y: number, x: number): number, atanh(x: number): number, cbrt(x: number): number, ceil(x: number): number, clz32(x: number): number, cos(x: number): number, cosh(x: number): number, exp(x: number): number, expm1(x: number): number, floor(x: number): number, fround(x: number): number, hypot(...values: Array<number>): number, imul(x: number, y: number): number, log(x: number): number, log10(x: number): number, log1p(x: number): number, log2(x: number): number, max(...values: Array<number>): number, min(...values: Array<number>): number, pow(x: number, y: number): number, random(): number, round(x: number): number, sign(x: number): number, sin(x: number): number, sinh(x: number): number, sqrt(x: number): number, tan(x: number): number, tanh(x: number): number, trunc(x: number): number, ...}"
    },
    {"name":"MediaError","type":"typeof MediaError"},
    {"name":"MediaKeys","type":"typeof MediaKeys"},
    {"name":"MediaKeySession","type":"typeof MediaKeySession"},
    {"name":"MediaKeyStatusMap","type":"typeof MediaKeyStatusMap"},
    {"name":"MediaList","type":"typeof MediaList"},
    {"name":"MediaQueryListEvent","type":"typeof MediaQueryListEvent"},
    {"name":"MediaSource","type":"typeof MediaSource"},
    {"name":"MediaStream","type":"typeof MediaStream"},
    {"name":"MediaStreamTrack","type":"typeof MediaStreamTrack"},
    {"name":"MediaStreamTrackEvent","type":"typeof MediaStreamTrackEvent"},
    {"name":"MessageEvent","type":"typeof MessageEvent"},
    {
      "name":"module",
      "type":"{children: Array<any>, exports: any, filename: string, id: string, isPreloading: boolean, loaded: boolean, parent: any, path: string, paths: Array<string>, require(id: string): any, ...}"
    },
    {"name":"MouseEvent","type":"typeof MouseEvent"},
    {"name":"NamedNodeMap","type":"typeof NamedNodeMap"},
    {"name":"NaN","type":"number"},
    {"name":"Node","type":"typeof Node"},
    {"name":"NodeFilter","type":"typeof NodeFilter"},
    {"name":"NodeIterator","type":"typeof NodeIterator"},
    {"name":"NodeList","type":"typeof NodeList"},
    {"name":"Number","type":"typeof Number"},
    {"name":"Object","type":"typeof Object"},
    {"name":"PageTransitionEvent","type":"typeof PageTransitionEvent"},
    {"name":"parseFloat","type":"(string: mixed) => number"},
    {"name":"parseInt","type":"(string: mixed, radix?: number) => number"},
    {"name":"Path2D","type":"typeof Path2D"},
    {"name":"PermissionStatus","type":"typeof PermissionStatus"},
    {"name":"PointerEvent","type":"typeof PointerEvent"},
    {"name":"ProgressEvent","type":"typeof ProgressEvent"},
    {"name":"Promise","type":"typeof Promise"},
    {"name":"PromiseRejectionEvent","type":"typeof PromiseRejectionEvent"},
    {"name":"Proxy","type":"typeof Proxy"},
    {
      "name":"queueMicrotask",
      "type":"<TArguments: $ReadOnlyArray<mixed>>(callback: (...args: TArguments) => mixed) => void"
    },
    {"name":"Range","type":"typeof Range"},
    {"name":"RangeError","type":"typeof RangeError"},
    {"name":"ReadableStream","type":"typeof ReadableStream"},
    {"name":"ReadableStreamController","type":"typeof ReadableStreamController"},
    {"name":"ReadableStreamReader","type":"typeof ReadableStreamReader"},
    {"name":"ReferenceError","type":"typeof ReferenceError"},
    {
      "name":"Reflect",
      "type":"{apply(target: (...any) => any, thisArg?: any, argumentsList?: Array<any>): any, construct(target: (...any) => any, argumentsList?: Array<any>, newTarget?: any): any, defineProperty(o: any, p: any, attributes: any): boolean, deleteProperty(o: any, p: any): boolean, get(o: any, p: any, receiver?: any): any, getOwnPropertyDescriptor(o: any, p: any): any, getPrototypeOf: (o: $NotNullOrVoid) => any, has(o: any, p: any): boolean, isExtensible(o: any): boolean, ownKeys(o: any): Array<any>, preventExtensions(o: any): boolean, set(o: any, p: any, value: any, receiver?: any): boolean, setPrototypeOf: (target: any, prototype: {[any]: any} | null) => boolean, ...}"
    },
    {"name":"RegExp","type":"typeof RegExp"},
    {
      "name":"require",
      "type":"{(id: string): any, cache: any, main: {children: Array<any>, exports: any, filename: string, id: string, isPreloading: boolean, loaded: boolean, parent: any, path: string, paths: Array<string>, require(id: string): any, ...}, resolve: (id: string, options?: {paths?: Array<string>, ...}) => string, ...}"
    },
    {
      "name":"SecurityPolicyViolationEvent",
      "type":"typeof SecurityPolicyViolationEvent"
    },
    {"name":"Selection","type":"typeof Selection"},
    {"name":"Set","type":"typeof Set"},
    {
      "name":"setInterval",
      "type":"<TArguments: Array<mixed>>(callback: (...args: TArguments) => mixed, ms?: number, ...args: TArguments) => IntervalID"
    },
    {
      "name":"setTimeout",
      "type":"<TArguments: Array<mixed>>(callback: (...args: TArguments) => mixed, ms?: number, ...args: TArguments) => TimeoutID"
    },
    {"name":"SharedArrayBuffer","type":"typeof SharedArrayBuffer"},
    {"name":"SourceBuffer","type":"typeof SourceBuffer"},
    {"name":"SourceBufferList","type":"typeof SourceBufferList"},
    {"name":"Storage","type":"typeof Storage"},
    {"name":"StorageEvent","type":"typeof StorageEvent"},
    {"name":"String","type":"typeof String"},
    {"name":"StyleSheet","type":"typeof StyleSheet"},
    {"name":"StyleSheetList","type":"typeof StyleSheetList"},
    {"name":"SVGMatrix","type":"typeof SVGMatrix"},
    {"name":"Symbol","type":"typeof Symbol"},
    {"name":"SyntaxError","type":"typeof SyntaxError"},
    {"name":"SyntheticAnimationEvent","type":"typeof SyntheticAnimationEvent"},
    {"name":"SyntheticClipboardEvent","type":"typeof SyntheticClipboardEvent"},
    {"name":"SyntheticCompositionEvent","type":"typeof SyntheticCompositionEvent"},
    {"name":"SyntheticDragEvent","type":"typeof SyntheticDragEvent"},
    {"name":"SyntheticEvent","type":"typeof SyntheticEvent"},
    {"name":"SyntheticFocusEvent","type":"typeof SyntheticFocusEvent"},
    {"name":"SyntheticInputEvent","type":"typeof SyntheticInputEvent"},
    {"name":"SyntheticKeyboardEvent","type":"typeof SyntheticKeyboardEvent"},
    {"name":"SyntheticMouseEvent","type":"typeof SyntheticMouseEvent"},
    {"name":"SyntheticPointerEvent","type":"typeof SyntheticPointerEvent"},
    {"name":"SyntheticTouchEvent","type":"typeof SyntheticTouchEvent"},
    {"name":"SyntheticTransitionEvent","type":"typeof SyntheticTransitionEvent"},
    {"name":"SyntheticUIEvent","type":"typeof SyntheticUIEvent"},
    {"name":"SyntheticWheelEvent","type":"typeof SyntheticWheelEvent"},
    {"name":"Text","type":"typeof Text"},
    {"name":"TextEncoder","type":"typeof TextEncoder"},
    {"name":"TextMetrics","type":"typeof TextMetrics"},
    {"name":"TextRange","type":"typeof TextRange"},
    {"name":"TextTrack","type":"typeof TextTrack"},
    {"name":"TextTrackCue","type":"typeof TextTrackCue"},
    {"name":"TextTrackCueList","type":"typeof TextTrackCueList"},
    {"name":"TextTrackList","type":"typeof TextTrackList"},
    {"name":"TimeRanges","type":"typeof TimeRanges"},
    {"name":"Touch","type":"typeof Touch"},
    {"name":"TouchEvent","type":"typeof TouchEvent"},
    {"name":"TouchList","type":"typeof TouchList"},
    {"name":"TrackDefault","type":"typeof TrackDefault"},
    {"name":"TrackDefaultList","type":"typeof TrackDefaultList"},
    {"name":"TransformStream","type":"typeof TransformStream"},
    {"name":"TransitionEvent","type":"typeof TransitionEvent"},
    {"name":"TreeWalker","type":"typeof TreeWalker"},
    {"name":"TrustedHTML","type":"typeof TrustedHTML"},
    {"name":"TrustedScript","type":"typeof TrustedScript"},
    {"name":"TrustedScriptURL","type":"typeof TrustedScriptURL"},
    {"name":"TypeError","type":"typeof TypeError"},
    {"name":"UIEvent","type":"typeof UIEvent"},
    {"name":"Uint16Array","type":"typeof Uint16Array"},
    {"name":"Uint32Array","type":"typeof Uint32Array"},
    {"name":"Uint8Array","type":"typeof Uint8Array"},
    {"name":"Uint8ClampedArray","type":"typeof Uint8ClampedArray"},
    {"name":"undefined","type":"void"},
    {"name":"unescape","type":"(str: string) => string"},
    {"name":"URIError","type":"typeof URIError"},
    {"name":"URL","type":"typeof URL"},
    {"name":"URLSearchParams","type":"typeof URLSearchParams"},
    {"name":"USBAlternateInterface","type":"typeof USBAlternateInterface"},
    {"name":"USBConfiguration","type":"typeof USBConfiguration"},
    {"name":"USBConnectionEvent","type":"typeof USBConnectionEvent"},
    {"name":"USBDevice","type":"typeof USBDevice"},
    {"name":"USBEndpoint","type":"typeof USBEndpoint"},
    {"name":"USBInterface","type":"typeof USBInterface"},
    {"name":"USBInTransferResult","type":"typeof USBInTransferResult"},
    {
      "name":"USBIsochronousInTransferPacket",
      "type":"typeof USBIsochronousInTransferPacket"
    },
    {
      "name":"USBIsochronousInTransferResult",
      "type":"typeof USBIsochronousInTransferResult"
    },
    {
      "name":"USBIsochronousOutTransferPacket",
      "type":"typeof USBIsochronousOutTransferPacket"
    },
    {
      "name":"USBIsochronousOutTransferResult",
      "type":"typeof USBIsochronousOutTransferResult"
    },
    {"name":"USBOutTransferResult","type":"typeof USBOutTransferResult"},
    {"name":"ValidityState","type":"typeof ValidityState"},
    {"name":"VideoTrack","type":"typeof VideoTrack"},
    {"name":"VideoTrackList","type":"typeof VideoTrackList"},
    {"name":"WeakMap","type":"typeof WeakMap"},
    {"name":"WeakRef","type":"typeof WeakRef"},
    {"name":"WeakSet","type":"typeof WeakSet"},
    {"name":"WebGLContextEvent","type":"typeof WebGLContextEvent"},
    {"name":"WebGLRenderingContext","type":"typeof WebGLRenderingContext"},
    {"name":"WheelEvent","type":"typeof WheelEvent"},
    {"name":"WritableStream","type":"typeof WritableStream"},
    {
      "name":"WritableStreamDefaultWriter",
      "type":"typeof WritableStreamDefaultWriter"
    },
    {"name":"WriteableStream","type":"typeof WriteableStream"}
  ]
}

normalize-1.js:4:12
Flags: --pretty
{"result":[{"name":"b","type":"T"}]}

normalize-2.js:5:10
Flags: --pretty
{
  "result":[
    {"name":"a","type":"{b: T, ...}"},
    {"name":"async","type":""},
    {"name":"await","type":""},
    {"name":"c","type":"T"},
    {"name":"class","type":""},
    {"name":"delete","type":""},
    {"name":"foo","type":"<T>(a: {b: T, ...}) => any"},
    {"name":"function","type":""},
    {"name":"import","type":""},
    {"name":"new","type":""},
    {"name":"this","type":"this"},
    {"name":"typeof","type":""},
    {"name":"void","type":""},
    {"name":"yield","type":""}
  ]
}

num.js:4:5
Flags: --pretty
{
  "result":[
    {"name":"toExponential","type":"(fractionDigits?: number) => string"},
    {"name":"toFixed","type":"(fractionDigits?: number) => string"},
    {
      "name":"toLocaleString",
      "type":"(locales?: string | Array<string>, options?: Intl$NumberFormatOptions) => string"
    },
    {"name":"toPrecision","type":"(precision?: number) => string"},
    {"name":"toString","type":"(radix?: number) => string"},
    {"name":"valueOf","type":"() => number"}
  ]
}

object_builtins.js:4:5
Flags: --pretty
{"error":"not enough type information to extract members","result":[]}

object_keys_spread.js:22:15
Flags: --pretty
{"result":[{"name":"a","type":"number"},{"name":"c","type":"number"}]}

object_literal.js:5:16
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

object_literal.js:7:17
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

object_literal.js:12:4
Flags: --pretty
{
  "result":[{"name":"baz","type":"boolean | void"},{"name":"foo","type":"string | void"}]
}

object_literal.js:15:4
Flags: --pretty
{
  "result":[{"name":"baz","type":"boolean | void"},{"name":"foo","type":"string | void"}]
}

object-spread-1.js:9:3
Flags: --pretty
{"result":[{"name":"bar","type":"B"},{"name":"foo","type":"A"}]}

object-spread-2.js:9:3
Flags: --pretty
{"result":[{"name":"bar","type":"C"},{"name":"foo","type":"A"}]}

opaque_types.js:13:4
Flags: --pretty
{"result":[]}

opaque_types.js:16:4
Flags: --pretty
{"result":[{"name":"foo","type":"string"}]}

opaque_types.js:19:4
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

opaque_types.js:22:4
Flags: --pretty
{"result":[{"name":"bar","type":"number"},{"name":"foo","type":"string"}]}

optional_chaining_continue.js:13:19
Flags: --pretty
{"result":[{"name":"baz","type":"void | number"}]}

optional_chaining_middle.js:9:16
Flags: --pretty
{"result":[{"name":"bar","type":"void | number"}]}

optional_chaining_new.js:9:15
Flags: --pretty
{"result":[{"name":"bar","type":"void | number"}]}

optional.js:4:14
Flags: --pretty
{
  "result":[
    {"name":"f","type":"(x?: string) => void"},
    {"name":"o","type":"{x?: string, ...}"},
    {"name":"x","type":"string | void"}
  ]
}

optional_object.js:3:5
Flags: --pretty
{"result":[{"name":"?.z","type":"void | number"}]}

override.js:10:16
Flags: --pretty
{
  "result":[
    {"name":"bar","type":"() => void"},
    {"name":"foo","type":"() => string"},
    {"name":"override","type":"() => string"}
  ]
}

pattern.js:4:8
Flags: --pretty
{"result":[]}

pattern.js:8:4
Flags: --pretty
{"result":[{"name":"foo","type":"number"}]}

pattern.js:12:14
Flags: --pretty
{"result":[]}

pattern_object_key_middle.js:6:12
Flags: --pretty
{"result":[{"name":"foobar","type":"string"}]}

poly.js:5:3
Flags: --pretty
{"result":[{"name":"x","type":"number"},{"name":"y","type":"number"}]}

poly_no_args.js:5:3
Flags: --pretty
{"result":[{"name":"x","type":"number"}]}

qualified-type-annotation.js:5:23
Flags: --pretty
{
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"}
  ]
}

qualified-type-annotation-require.js:5:23
Flags: --pretty
{
  "result":[
    {"name":"Typesafety","type":"interface Typesafety"},
    {"name":"Typical","type":"type Typical = {|x: number, y: number|}"},
    {"name":"Tyrannosaurus","type":"class Tyrannosaurus"}
  ]
}

qux.js:6:4
Flags: --pretty
{"result":[{"name":"x","type":"number"}]}

