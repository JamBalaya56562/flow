Error ---------------------------------------------------------------------------------------------------- test.js:14:23

Cannot assign object literal to `error1` because property `foo` is missing in `Props` [1] but exists in object
literal [2]. Any property that does not exist in `Props` [1] must be compatible with its indexer string prefixed with
`data-` [3]. [incompatible-type]

   test.js:14:23
   14| const error1: Props = {foo: 3}; // One error
                             ^^^^^^^^ [2]

References:
   test.js:14:15
   14| const error1: Props = {foo: 3}; // One error
                     ^^^^^ [1]
   test.js:11:4
   11|   [StringPrefix<'data-'>]: string | void,
          ^^^^^^^^^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------------- test.js:22:1

Cannot cast `objWithProto.foo` to number because string [1] is incompatible with number [2]. [incompatible-cast]

   test.js:22:1
   22| objWithProto.foo as number; // TODO: no error
       ^^^^^^^^^^^^^^^^

References:
   test.js:18:26
   18|   [StringPrefix<'bar'>]: string,
                                ^^^^^^ [1]
   test.js:22:21
   22| objWithProto.foo as number; // TODO: no error
                           ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:22:1

Cannot get `objWithProto.foo` because string `foo` [1] is incompatible with string prefixed with `bar` [2].
[incompatible-type]

   test.js:22:1
   22| objWithProto.foo as number; // TODO: no error
       ^^^^^^^^^^^^^^^^ [1]

References:
   test.js:18:4
   18|   [StringPrefix<'bar'>]: string,
          ^^^^^^^^^^^^^^^^^^^ [2]



Found 3 errors
